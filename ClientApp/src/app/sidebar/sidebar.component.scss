

app-selected-match-discussion-info, app-chat2 {
  background-color: #141414;
  /*position: fixed;*/
  height: 100%;
  /*overflow-y: scroll;*/
  padding-left: 0px;
  padding-right: 0px;
}

.h1 {
  color: grey;
}


.Discussion {
  animation-name: fadeIn;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  animation-play-state: running;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}


.CreatureInformation {
  animation-name: fadeIn2;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  animation-play-state: running;
}

@keyframes fadeIn2 {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}


.init {
  animation-name: fadeInRight;
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.closeColumn {
  animation-name: fadeOutRight;
  animation-duration: 1s;
  animation-fill-mode: forwards;
}

@keyframes fadeOutRight {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }
}





$button-size: 40px;
$close-width: ($button-size / 10);

.wrapper {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.wrapper:hover{
    cursor:pointer
}

.close-button {
  display: block;
  width: $button-size;
  height: $button-size;
  position: fixed;
  top:5px;
  right:5px;
  overflow: hidden;

  > div {
    position: relative;
  }

  &-block {
    width: 40px;
    height: 20px;
    position: relative;
    overflow: hidden;

    &:before,
    &:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: calc(55% - 4px);
      display: block;
      width: 4px;
      height: 25px;
      transform-origin: bottom center;
      background: white;
      transition: all ease-out 280ms;
    }

    &:last-of-type {
      transform: rotate(180deg);
    }
  }

  .in {
    .close-button-block {
      &:before {
        transition-delay: 280ms;
        transform: translateX(20px) translateY(-20px) rotate(45deg);
      }

      &:after {
        transition-delay: 280ms;
        transform: translateX(-22px) translateY(-22px) rotate(-45deg);
      }
    }
  }

  .out {
    position: absolute;
    top: 0;
    left: 0;

    .close-button-block {
      &:before {
        transform: translateX(-5px) translateY(5px) rotate(45deg);
      }

      &:after {
        transform: translateX(5px) translateY(5px) rotate(-45deg);
      }
    }
  }

  &:hover {
    .in {
      .close-button-block {
        &:before {
          transform: translateX(-5px) translateY(5px) rotate(45deg);
        }

        &:after {
          transform: translateX(5px) translateY(5px) rotate(-45deg);
        }
      }
    }

    .out {
      .close-button-block {
        &:before {
          transform: translateX(-20px) translateY(20px) rotate(45deg);
        }

        &:after {
          transform: translateX(20px) translateY(20px) rotate(-45deg);
        }
      }
    }
  }
}
